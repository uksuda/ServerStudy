syntax = "proto3";

option csharp_namespace = "Game.Types";

package game.types;

enum JobType {
  JOB_TYPE_NONE = 0;
  JOB_TYPE_KNIGHT = 1;
  JOB_TYPE_ARCHER = 2;
  JOB_TYPE_MAGICIAN = 3;
  JOB_TYPE_MAX = 4;
}

enum DirectionType {
  DIRECTION_TYPE_NONE = 0;
  DIRECTION_TYPE_WEST = 1;
  DIRECTION_TYPE_EAST = 2;
  DIRECTION_TYPE_NORTH = 3;
  DIRECTION_TYPE_SOUTH = 4;
}

// DATA_ZONE start index
enum ZoneStartIndex {
  ZONE_START_INDEX_NONE = 0;
  ZONE_START_INDEX_TUTORIAL = 1;
  ZONE_START_INDEX_NORMAL = 1001;
}

enum GradeType {
  GRADE_NONE = 0;
  GRADE_NORMAL = 1;
  GRADE_MAGIC = 2;
  GRADE_RARE = 3;
  GRADE_UNIQUE = 4;
}

enum StatusType {
  STATUS_TYPE_NONE = 0;
  STATUS_TYPE_STR = 1;
  STATUS_TYPE_DEX = 2;
  STATUS_TYPE_VITAL = 3;
  STATUS_TYPE_ENERGY = 4;
  STATUS_TYPE_ATT = 5;
  STATUS_TYPE_DEF = 6;
  STATUS_TYPE_HP = 7;
  STATUS_TYPE_MP = 8;
}

enum MonsterStateType {
  MONSTER_STATE_TYPE_NONE = 0;
  MONSTER_STATE_TYPE_IDLE = 1;
  MONSTER_STATE_TYPE_MOVE = 2;
  MONSTER_STATE_TYPE_FIGHT = 3;
  MONSTER_STATE_TYPE_DEAD = 4;
}

enum CharacterStateType {
  CHARACTER_STATE_TYPE_NONE = 0;
  CHARACTER_STATE_TYPE_IDLE = 1;
  CHARACTER_STATE_TYPE_FIGHT = 2;
  CHARACTER_STATE_TYPE_DEAD = 3;
}

enum ItemEquipType {
  ITEM_EQUIP_TYPE_NONE = 0;
  ITEM_EQUIP_TYPE_WEAPON = 1;
  ITEM_EQUIP_TYPE_WEAPON_SUB = 2;
  ITEM_EQUIP_TYPE_HELM = 3;
  ITEM_EQUIP_TYPE_ARMOR = 4;
  ITEM_EQUIP_TYPE_BOOTS = 5;
}

enum ConsumeType {
  CONSUME_TYPE_NONE = 0;
  CONSUME_TYPE_HP = 1;
  CONSUME_TYPE_MP = 2;
  CONSUME_TYPE_BOTH = 3;
}

// --------------------------------------------------------
enum StreamPacket {
    STREAM_PACKET_NONE = 0;
    STREAM_PACKET_CONNECT_REQ = 10;       // c2s
    STREAM_PACKET_CONNECT_RES = 11;       // s2c

    STREAM_PACKET_USER_CONNECT = 15;      // s2c
    STREAM_PACKET_USER_DISCONNECT = 16;   // s2c

    STREAM_PACKET_DISCONNECTED = 20;      // s2c, c2s,

    STREAM_PACKET_MESSAGE_SEND = 100;     // c2s
    STREAM_PACKET_MESSAGE_RECV = 101;     // s2c
}

enum UnaryDataType {
    UNARY_DATA_TYPE_NONE = 0;
    UNARY_DATA_TYPE_COMMAND_REQ = 10;
    UNARY_DATA_TYPE_COMMAND_RES = 11;
    UNARY_DATA_TYPE_CREATE_CHARACTER_REQ = 20;
    UNARY_DATA_TYPE_CREATE_CHARACTER_RES = 21;
}

enum ResultCode {
    RESULT_CODE_SUCCESS = 0;

    RESULT_CODE_INVALID_REQ_PARAM = 10;
    RESULT_CODE_NOT_EXIST = 100;
    RESULT_CODE_DUPLICATED = 200;

    RESULT_CODE_SERVER_INTERNAL_ERROR = 9000;
    RESULT_CODE_TOKEN_INVALID = 9500;
    RESULT_CODE_TOKEN_EXPIRE = 9510;
    RESULT_CODE_UNKNOWN_ERROR = 9999;
}